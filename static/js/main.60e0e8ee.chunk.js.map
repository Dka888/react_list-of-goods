{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","hadleClickAlphabetical","setState","ALPHABET","hadleClickLength","LENGTH","hadleClickReverse","hadleReset","this","goodsForRender","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,uBAAyB,WACvB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,iBAAmB,WACjB,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,kBAAoB,WACK,EAAKT,MAApBC,WAGN,EAAKI,SAAS,CAAEJ,YAAY,IAE5B,EAAKI,SAAS,CAAEJ,YAAY,KApBlC,EAwBES,WAAa,WACX,EAAKL,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KAzBzD,4CA4BE,WACE,MAAiCU,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EA7DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAEzB,OAAQX,GACN,KAAKL,EAASS,SACZQ,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKpB,EAASW,OACZM,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAW7C,OAJIlB,GACFa,EAAaM,UAGRN,EAuCkBO,CAAkBvB,EAAiBa,KAAKX,OAE/D,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,4BAAuBpB,IAAaL,EAASS,UAAY,YAClEkB,QAASb,KAAKP,uBAHhB,iCAQA,wBACEmB,KAAK,SACLD,UAAS,4BAAuBpB,IAAaL,EAASW,QAAU,YAChEgB,QAASb,KAAKJ,iBAHhB,4BAQA,wBACEgB,KAAK,SACLD,UAAS,6BAAwBrB,GAAc,YAC/CuB,QAASb,KAAKF,kBAHhB,sBAQEP,IAAaL,EAASM,MAAQF,IAC9B,wBACEsB,KAAK,SACLD,UAAU,4BACVE,QAASb,KAAKD,WAHhB,sBAUJ,6BACE,6BACGE,EAAea,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAzEtC,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.60e0e8ee.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      visibleGoods;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ninterface State {\n  isReversed: boolean,\n  sortType: SortType,\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  hadleClickAlphabetical = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  hadleClickLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  hadleClickReverse = () => {\n    const { isReversed } = this.state;\n\n    if (isReversed) {\n      this.setState({ isReversed: false });\n    } else {\n      this.setState({ isReversed: true });\n    }\n  };\n\n  hadleReset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const goodsForRender = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== SortType.ALPHABET && 'is-light'}`}\n            onClick={this.hadleClickAlphabetical}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n            onClick={this.hadleClickLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!isReversed && 'is-light'}`}\n            onClick={this.hadleClickReverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.hadleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goodsForRender.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}